@model final.Models.tblExer
@{
    var existingSubmission = ViewBag.ExistingSubmission as final.Models.tblEU;
    var isDeadlinePassed = (bool)ViewBag.IsDeadlinePassed;
    var plagiarismResultJson = TempData["PlagiarismResult"] as string;
    PlagiarismResult plagiarismResult = null;

    if (!string.IsNullOrEmpty(plagiarismResultJson))
    {
        plagiarismResult = System.Text.Json.JsonSerializer.Deserialize<PlagiarismResult>(plagiarismResultJson);
    }
}

<style>
    .plagiarism-highlight {
        padding: 2px 4px;
        border-radius: 3px;
        cursor: pointer;
        position: relative;
    }

    .plagiarism-level-1 {
        background-color: #ffebee;
        border-left: 3px solid #ffcdd2;
    }

    .plagiarism-level-2 {
        background-color: #fff3e0;
        border-left: 3px solid #ffcc02;
    }

    .plagiarism-level-3 {
        background-color: #fff9c4;
        border-left: 3px solid #ffeb3b;
    }

    .plagiarism-level-4 {
        background-color: #f3e5f5;
        border-left: 3px solid #ba68c8;
    }

    .plagiarism-level-5 {
        background-color: #e8f5e8;
        border-left: 3px solid #66bb6a;
    }

    .plagiarism-level-6 {
        background-color: #e3f2fd;
        border-left: 3px solid #42a5f5;
    }

    .plagiarism-level-7 {
        background-color: #fce4ec;
        border-left: 3px solid #f06292;
    }

    .plagiarism-level-8 {
        background-color: #fff8e1;
        border-left: 3px solid #ffb74d;
    }

    .plagiarism-level-9 {
        background-color: #f1f8e9;
        border-left: 3px solid #9ccc65;
    }

    .plagiarism-level-10 {
        background-color: #ffebee;
        border-left: 3px solid #f44336;
    }

    .tooltip {
        position: absolute;
        background: #333;
        color: white;
        padding: 8px;
        border-radius: 4px;
        font-size: 12px;
        z-index: 1000;
        max-width: 300px;
        display: none;
    }

    .plagiarism-stats {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 20px;
        margin: 20px 0;
    }

    .stat-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .progress-bar {
        width: 100%;
        height: 20px;
        background-color: #e9ecef;
        border-radius: 10px;
        overflow: hidden;
        margin-top: 5px;
    }

    .progress-fill {
        height: 100%;
        transition: width 0.3s ease;
    }

    .progress-low {
        background-color: #28a745;
    }

    .progress-medium {
        background-color: #ffc107;
    }

    .progress-high {
        background-color: #dc3545;
    }

    .existing-submission {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        border-radius: 8px;
        padding: 15px;
        margin: 15px 0;
    }

    .deadline-passed {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 8px;
        padding: 15px;
        margin: 15px 0;
    }
</style>

<main class="main">
    <div class="page-title dark-background">
        <div class="container d-lg-flex justify-content-between align-items-center">
            <h1 class="mb-2 mb-lg-0">Exer Details</h1>
            <nav class="breadcrumbs">
                <ol>
                    <li><a href="index.html">Home</a></li>
                    <li class="current">Exer Details</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Service Details Section -->
    <section id="service-details" class="service-details section">
        <div class="container">
            <div class="row gy-4">
                <div class="col-lg-12" data-aos="fade-up" data-aos-delay="200">
                    <img src="assets/img/services.jpg" alt="" class="img-fluid services-img">
                    <h3 style="font-family: Arial, Helvetica, sans-serif;">@Html.DisplayFor(model => model.ExerName)
                    </h3>
                    <p>
                        @Html.DisplayFor(m => m.Contents)
                    </p>

                    <ul>
                        @if (!string.IsNullOrWhiteSpace(Model.Request))
                        {
                            var requestItems = Model.Request.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries)
                            .Select(item => item.Trim())
                            .Where(item => !string.IsNullOrEmpty(item));
                            if (requestItems.Any())
                            {
                                foreach (var requestItem in requestItems)
                                {
                                    <li><i class="bi bi-check-circle"></i> <span>@requestItem.</span></li>
                                }
                            }
                            else
                            {
                                <li><i class="bi bi-check-circle"></i> <span>No valid requests found.</span></li>
                            }
                        }
                        else
                        {
                            <li><i class="bi bi-check-circle"></i> <span>No requests available.</span></li>
                        }
                    </ul>

                    <p class="text-success">
                        Create Date: @Html.DisplayFor(m => m.CreateAt)
                    </p>
                    <p class="text-danger">
                        Deadline: @Html.DisplayFor(m => m.Deadline)
                    </p>
                </div>
            </div>

            <hr />

            @if (isDeadlinePassed)
            {
                <div class="deadline-passed">
                    <h5><i class="bi bi-exclamation-triangle"></i> The deadline for submission has passed.</h5>
                    <p>The submission deadline has ended on @Model.Deadline?.ToString("dd/MM/yyyy HH:mm")</p>
                </div>
            }

            @if (existingSubmission != null)
            {
                <div class="existing-submission">
                    <h5><i class="bi bi-file-earmark-pdf"></i> Submitted exercise</h5>
                    <p><strong>Submission time:</strong> @existingSubmission.SubmitDate?.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>Status:</strong>
                        @if (existingSubmission.IsAcepted == true)
                        {
                            <span class="badge bg-success">Accepted</span>
                        }
                        else if (existingSubmission.IsAcepted == false)
                        {
                            <span class="badge bg-warning">Waiting for approval</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Not determined</span>
                        }
                    </p>
                    <p>
                        <a href="@existingSubmission.FilePath" target="_blank" class="btn btn-outline-primary">
                            <i class="bi bi-eye"></i> View submitted exercise
                        </a>
                    </p>
                </div>
            }

            @if (!isDeadlinePassed)
            {
                <h5>@(existingSubmission != null ? "Change submissions:" : "Submit PDF here:")</h5>
                <form asp-controller="Home" asp-action="Upload" asp-route-exerId="@Model.ExerId" method="post"
                    enctype="multipart/form-data">
                    <div class="mb-3">
                        <input type="file" name="pdfFile" class="form-control" accept=".pdf" required />
                        <div class="form-text">Only PDF files are accepted. The system will automatically check for
                            plagiarism.</div>
                    </div>
                    
                        <a class="btn btn-lg btn-warning p-2 mr-5" href="javascript:history.back()">
                            <i class="bi bi-arrow-left-circle"></i> Go back
                        </a>
                    
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-upload"></i> @(existingSubmission != null ? "Update submission" : "Submit")
                    </button>
                </form>
            }

            @if (TempData["UploadSuccess"] != null)
            {
                <div class="alert alert-success mt-3">@TempData["UploadSuccess"]</div>
            }

            @if (TempData["UploadError"] != null)
            {
                <div class="alert alert-danger mt-3">@TempData["UploadError"]</div>
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mt-3">An error occurred. Check the file again.</div>
            }

            @if (plagiarismResult != null)
            {
                <div class="plagiarism-stats">
                    <h5><i class="bi bi-shield-check"></i> Plagiarism check results</h5>

                    <div class="stat-item">
                        <strong>Plagiarism rate:</strong>
                        <span
                            class="@(plagiarismResult.PlagiarismPercentage > 60 ? "text-danger" : plagiarismResult.PlagiarismPercentage > 30 ? "text-warning" : "text-success")">
                            @plagiarismResult.PlagiarismPercentage.ToString("F1")%
                        </span>
                    </div>

                    <div class="progress-bar">
                        <div class="progress-fill @(plagiarismResult.PlagiarismPercentage > 60 ? "progress-high" : plagiarismResult.PlagiarismPercentage > 30 ? "progress-medium" : "progress-low")"
                            style="width: @plagiarismResult.PlagiarismPercentage%"></div>
                    </div>

                    <div class="stat-item mt-3">
                        <strong>Number of plagiarism sentences:</strong>
                        <span>@plagiarismResult.PlagiarizedSentences.Count</span>
                    </div>

                    @if (plagiarismResult.PlagiarismPercentage > 60)
                    {
                        <div class="alert alert-danger mt-3">
                            <i class="bi bi-exclamation-triangle"></i> <strong>Warning:</strong> Plagiarism rate is too high!
                            The assignment is not saved in the system.
                        </div>
                    }
                    else if (plagiarismResult.PlagiarismPercentage > 30)
                    {
                        <div class="alert alert-warning mt-3">
                            <i class="bi bi-info-circle"></i> <strong>Note:</strong> Plagiarism rate is average. Please pay
                            attention to citation.
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success mt-3">
                            <i class="bi bi-check-circle"></i> <strong>Good:</strong> Plagiarism rate is acceptable.
                        </div>
                    }
                </div>

                @if (plagiarismResult.PlagiarizedSentences.Any())
                {
                    <div class="mt-4">
                        <h6><i class="bi bi-highlighter"></i> Content highlighted by plagiarism level:</h6>
                        <div class="mb-3">
                            <small class="text-muted">
                                <span class="plagiarism-highlight plagiarism-level-1">Few sources</span> →
                                <span class="plagiarism-highlight plagiarism-level-10">Many sources</span>
                                (Click on the highlighted sentence to see the source)
                            </small>
                        </div>

                        <div id="highlighted-content" class="border p-3 rounded">
                            @{
                                var paragraphs = plagiarismResult.OriginalContent.Split(new[] { "\n\n", "\r\n\r\n" },
                                StringSplitOptions.RemoveEmptyEntries);

                                for (int pIndex = 0; pIndex < paragraphs.Length; pIndex++)
                                {
                                    <div class="mb-3">
                                        @{
                                            var sentences = paragraphs[pIndex].Split(new[] { ". ", "! ", "? " },
                                            StringSplitOptions.RemoveEmptyEntries);
                                            for (int sIndex = 0; sIndex < sentences.Length; sIndex++)
                                            {
                                                var sentence = sentences[sIndex].Trim();
                                                if (!string.IsNullOrWhiteSpace(sentence))
                                                {
                                                    var plagiarizedSentence = plagiarismResult.PlagiarizedSentences
                                                    .FirstOrDefault(ps => ps.ParagraphIndex == pIndex && ps.SentenceIndex == sIndex);

                                                    if (plagiarizedSentence != null)
                                                    {
                                                        var level = Math.Min(plagiarizedSentence.SourceCount, 10);
                                                        <span class="plagiarism-highlight plagiarism-level-@level"
                                                            data-sources="@string.Join("|", plagiarizedSentence.Sources)"
                                                            data-count="@plagiarizedSentence.SourceCount">
                                                            @sentence@(sIndex < sentences.Length - 1 ? ". " : "")
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @sentence
                                                        @(sIndex < sentences.Length - 1 ? ". " : "")
                                                    }
                                                }
                                            }
                                        }
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </section>
</main>

<div id="tooltip" class="tooltip"></div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const highlightedElements = document.querySelectorAll('.plagiarism-highlight');
        const tooltip = document.getElementById('tooltip');

        highlightedElements.forEach(element => {
            element.addEventListener('mouseenter', function (e) {
                const sources = this.dataset.sources ? this.dataset.sources.split('|') : [];
                const count = this.dataset.count || 0;

                let tooltipContent = `<strong>Tìm thấy ${count} nguồn tương tự</strong><br>`;
                if (sources.length > 0) {
                    tooltipContent += '<br><strong>Một số nguồn:</strong><br>';
                    sources.slice(0, 3).forEach(source => {
                        tooltipContent += `• <a href="${source}" target="_blank" style="color: #fff;">${source.substring(0, 50)}...</a><br>`;
                    });
                }

                tooltip.innerHTML = tooltipContent;
                tooltip.style.display = 'block';

                const rect = this.getBoundingClientRect();
                tooltip.style.left = rect.left + 'px';
                tooltip.style.top = (rect.bottom + 5) + 'px';
            });

            element.addEventListener('mouseleave', function () {
                tooltip.style.display = 'none';
            });
        });

        // Hide tooltip when clicking elsewhere
        document.addEventListener('click', function () {
            tooltip.style.display = 'none';
        });
    });
</script>